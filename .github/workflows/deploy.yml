name: nextjs-app deploy

on:
  push:
    branches:
      - dev
      - uat
      - qa

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Google Cloud
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker
        run: gcloud auth configure-docker

      - name: Add Google Cloud SDK repository and install gke-gcloud-auth-plugin
        run: |
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
          sudo apt-get install -y apt-transport-https ca-certificates gnupg
          curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
          sudo apt-get update
          sudo apt-get install -y google-cloud-sdk-gke-gcloud-auth-plugin
          echo 'export USE_GKE_GCLOUD_AUTH_PLUGIN=True' >> $HOME/.bashrc
          source $HOME/.bashrc

      - name: Build and push Docker image
        run: |
          docker buildx build --platform linux/amd64 --push -t gcr.io/${{ env.PROJECT_ID }}/gcc:${{ github.sha }} .

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Create .kube directory and configure kubectl
        run: |
          mkdir -p $HOME/.kube
          echo "${{ env.KUBE_CONFIG_DATA }}" | base64 --decode > $HOME/.kube/config

      - name: Create namespaces if not exist
        run: |
          kubectl create namespace dev || true
          kubectl create namespace uat || true
          kubectl create namespace qa || true

      - name: Apply Kubernetes deployment
        run: |
          kubectl apply -f k8/deployment.yaml -n ${{ github.ref_name }}

      - name: Apply Kubernetes service
        run: |
          kubectl apply -f k8/service.yaml -n ${{ github.ref_name }}

      - name: Apply Ingress configuration
        run: |
          kubectl apply -f k8/ingress.yaml  
